server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://magic-loki:3100/loki/api/v1/push

scrape_configs:
  - job_name: 'magic-spring-log'
    # 1. 定义抓取目标
    static_configs:
      - targets:
          - localhost
        labels:
          job: core-log
          service: magic-core
          __path__: /var/log/core/*.log

      - targets:
          - localhost
        labels:
          job: auth-log
          service: magic-auth
          __path__: /var/log/auth/*.log

      - targets:
          - localhost
        labels:
          job: gateway-log
          service: magic-gateway
          __path__: /var/log/gateway/*.log

      - targets:
          - localhost
        labels:
          job: multimedia-log
          service: magic-multimedia
          __path__: /var/log/multimedia/*.log

      - targets:
          - localhost
        labels:
          job: has-log
          service: magic-has
          __path__: /var/log/has/*.log

    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{3}\.\d{3}) \[(?P<thread>[^\]]+)-(?P<line>\d+)\] (?P<level>\w+) (?P<logger>[^ ]+) (?P<line_dup>\d+) (?P<method>[^ ]+) - (?P<message>.+)$'
      - timestamp:
          source: timestamp
          format: "2006-01-02 15:04:05.000"
      - labels:
          level:
          thread:
          logger:
          method:
          line:
      - output:
          source: message


#    # 2. 定义日志处理规则
#    pipeline_stages:
#      - json:
#          expressions:
#            stream: stream
#            attrs: attrs
#            tag: attrs.tag
#            time: time
#      - timestamp:
#          source: time
#          format: RFC3339Nano
#      - regex:
#          expression: ^(?P<image_name>([^|]+))\|(?P<container_name>([^|]+))$
#          source: "tag"
#      - labels:
#          image_name:
#          container_name:
#
#      - match:
#          # drop all logs for all containers that don't have --log-opt: tag: "{{:ImageName}}|{{:Name}}"
#          selector: '{job="docker",container_name="",image_name=""}'
#          action: drop
#
#      - match:
#          selector: '{image_name="nginx.promtail.test"}'
#          stages:
#            - json:
#                expressions:
#                  row: log
#            - regex:
#                # suppress forego colors
#                expression: .+nginx.+\|.+\[0m(?P<virtual_host>[a-z_\.-]+) +(?P<nginx_log_row>.+)
#                source: row
#            - regex:
#                source: nginx_log_row
#                expression: ^(?P<ip>[\w\.]+) - (?P<user>[^ ]*) \[(?P<timestamp>[^ ]+).*\] "(?P<method>[^ ]*) (?P<request_url>[^ ]*) (?P<request_http_protocol>[^ ]*)" (?P<status>[\d]+) (?P<bytes_out>[\d]+) "(?P<http_referer>[^"]*)" "(?P<user_agent>[^"]*)"( "(?P<response_time>[\d\.]+)")?
#            - regex:
#                source: request_url
#                expression: ^.+\.(?P<static_type>jpg|jpeg|gif|png|ico|css|zip|tgz|gz|rar|bz2|pdf|txt|tar|wav|bmp|rtf|js|flv|swf|html|htm)$
#            - regex:
#                source: request_url
#                expression: ^/photo/(?P<photo>[^/\?\.]+).*$
#            - regex:
#                source: request_url
#                expression: ^/api/(?P<api_request>[^/\?\.]+).*$
#            - template:
#                source: request_type
#                template: "{{if .photo}}photo{{else if .static_type}}static{{else if .api_request}}api{{else}}other{{end}}"
#            - labels:
#                api_request:
#                virtual_host:
#                request_type:
#                status:
#            - output:
#                source: nginx_log_row
#      - match:
#          selector: '{request_type="api"}'
#          stages:
#            - metrics:
#                http_nginx_response_time:
#                  type: Histogram
#                  description: "response time ms"
#                  source: response_time
#                  config:
#                    buckets: [0.010,0.050,0.100,0.200,0.500,1.0]
#      - match:
#          selector: '{request_type=~"static|photo"}'
#          stages:
#            - metrics:
#                http_nginx_response_bytes_sum:
#                  type: Counter
#                  description: "response bytes sum"
#                  source: bytes_out
#                  config:
#                    action: add
#                http_nginx_response_bytes_count:
#                  type: Counter
#                  description: "response bytes count"
#                  source: bytes_out
#                  config:
#                    action: inc
#      - match:
#          selector: '{image_name="nginx.promtail.test"}'
#          stages:
#            - labels:
#                filename:
#                stream:
